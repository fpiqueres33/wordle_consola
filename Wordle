import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Wordle {
    private static final List<String> PALABRAS = Arrays.asList(
            "coche", "perro", "gatos", "flora", "luces", "mixta", "fuego", "aguas", "arbol", "noche"
    );
    private static final int NUMERO_INTENTOS = 6;
    private static final int LONGITUD_PALABRA = 5;
    private String palabraSecreta;

    public Wordle() {
        Random random = new Random();
        this.palabraSecreta = PALABRAS.get(random.nextInt(PALABRAS.size()));
    }

    public String getPalabraSecreta() {
        return palabraSecreta;
    }

    public static void main(String[] args) {
        Wordle juego = new Wordle();
        Scanner scanner = new Scanner(System.in);
        boolean juegoTerminado = false;

        System.out.println("¡Bienvenido a Wordle en castellano!");
        System.out.println("Adivina la palabra de " + LONGITUD_PALABRA + " letras. Tienes " + NUMERO_INTENTOS + " intentos.");

        for (int intento = 1; intento <= NUMERO_INTENTOS && !juegoTerminado; intento++) {
            System.out.println("Intento " + intento + ":");
            String palabraIngresada = scanner.nextLine().toLowerCase();

            if (palabraIngresada.length() != LONGITUD_PALABRA) {
                System.out.println("La palabra debe tener " + LONGITUD_PALABRA + " letras.");
                intento--; // No contar este intento como válido
                continue;
            }

            if (palabraIngresada.equals(juego.getPalabraSecreta())) {
                System.out.println("¡Felicidades! Adivinaste la palabra.");
                juegoTerminado = true;
            } else {
                juego.proporcionarRetroalimentacion(palabraIngresada);

            }
        }

        if (!juegoTerminado) {
            System.out.println("Lo siento, has agotado todos los intentos. La palabra era: " + juego.getPalabraSecreta());
        }
    }

    private void proporcionarRetroalimentacion(String palabraIngresada) {
        StringBuilder retroalimentacion = new StringBuilder();
        for (int i = 0; i < LONGITUD_PALABRA; i++) {
            char letraIngresada = palabraIngresada.charAt(i);
            if (letraIngresada == palabraSecreta.charAt(i)) {
                retroalimentacion.append(letraIngresada); // Letra correcta en la posición correcta
            } else if (palabraSecreta.indexOf(letraIngresada) != -1) {
                retroalimentacion.append('+'); // Letra en la palabra pero en la posición incorrecta
            } else {
                retroalimentacion.append('-'); // Letra no está en la palabra
            }
        }
        System.out.println("Retroalimentación: " + retroalimentacion.toString());
    }
}
